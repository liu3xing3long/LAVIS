 # Copyright (c) 2022, salesforce.com, inc.
 # All rights reserved.
 # SPDX-License-Identifier: BSD-3-Clause
 # For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause

model:
   arch: blip2_vicuna_instruct
   model_type: vicuna7b

   load_pretrained: True
   # pretrained: "/home/liuxinglong/work/code/LAVIS/lavis/output/BLIP2/Pretrain_stage1/20230928151/checkpoint_9.pth"
   # pretrained: "/mnt/lustrenew/liuxinglong/work/LAVIS/lavis/output/BLIP2/Pretrain_stage1/20231007113/checkpoint_39.pth"
#   pretrained: "/mnt/lustrenew/liuxinglong/work/LAVIS/lavis/output/BLIP2/Pretrain_stage2/20231009140/checkpoint_9.pth"
#   pretrained: "/mnt/lustrenew/liuxinglong/work/LAVIS/lavis/output/BLIP2/Pretrain_stage2/20231012001/checkpoint_9.pth"
   pretrained: "/mnt/lustrenew/liuxinglong/work/LAVIS/lavis/output/BLIP2/Pretrain_stage2/20231013005/checkpoint_9.pth"
   freeze_vit: True

datasets:
  mimic_caption:
    data_type: images
    vis_processor:
        train:
          name: "blip2_image_train"
          image_size: 224
    text_processor:
        train:
          name: "blip_caption"
#          max_words: 100
    build_info:
      annotations:
        train:
          url: 
            - anno/mimic_cxr_train.json
            - anno/mimic_cxr_val.json
            - anno/mimic_cxr_test.json
          storage: 
            - anno/mimic_cxr_train.json
            - anno/mimic_cxr_val.json
            - anno/mimic_cxr_test.json
        # val:
        #   url: anno/mimic_cxr_val.json
        #   storage: anno/mimic_cxr_val.json
        # test:
        #   url: anno/mimic_cxr_test.json
        #   storage: anno/mimic_cxr_test.json
      images:
        storage: mimic/mimic-cxr-jpg-512/images/
  
  medicat_caption:
    data_type: images
    vis_processor:
        train:
          name: "blip_image_train"
          image_size: 224
    text_processor:
        train:
          name: "blip_caption"
#          max_words: 100
    build_info:
        annotations:
          train:
            url: 
              - anno/medicat_train.json
              - anno/medicat_val.json
              - anno/medicat_test.json
            storage: 
              - anno/medicat_train.json
              - anno/medicat_val.json
              - anno/medicat_test.json
          # val:
          #   url: anno/medicat_val.json
          #   storage: anno/medicat_val.json
          # test:
          #   url: anno/medicat_test.json
          #   storage: anno/medicat_test.json
        images:
          storage: 'medicat/figures/'

  roco_caption:
    data_type: images
    vis_processor:
        train:
          name: "blip_image_train"
          image_size: 224
    text_processor:
        train:
          name: "blip_caption"
#          max_words: 100
    build_info:
        annotations:
          train:
            url:
              - anno/roco_train.json
              - anno/roco_val.json
              - anno/roco_test.json
            storage:
              - anno/roco_train.json
              - anno/roco_val.json
              - anno/roco_test.json

#          val:
#            url: anno/roco_val.json
#            storage: anno/roco_val.json
#          test:
#            url: anno/roco_test.json
#            storage: anno/roco_test.json
        images:
          storage: 'roco/data/rad_images_all/'
run:
  task: image_text_pretrain
  # optimizer
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 1e-4
  min_lr: 1e-5
  warmup_lr: 1e-6

  weight_decay: 0.05
  max_epoch: 10
  batch_size_train: 4
  batch_size_eval: 8
  num_workers: 4
  warmup_steps: 2000

  seed: 42
  output_dir: "output/BLIP2/Instruct_BLIP"

  amp: True
  resume_ckpt_path: null

  evaluate: False 
  train_splits: ["train"]

  device: "cuda"
  world_size: 14
  dist_url: "env://"
  distributed: True